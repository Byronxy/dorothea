% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viper_wrapper.R
\name{run_viper}
\alias{run_viper}
\title{VIPER wrapper}
\usage{
run_viper(input, regulons, options = list(), tidy = FALSE)
}
\arguments{
\item{input}{An object containing a gene expression matrix with genes
(HGNC/MGI symbols) in rows and samples in columns. The object can be a
simple matrix/data frame or complexer objects such as ExpressionSet or
Seurat objects.}

\item{regulons}{DoRothEA regulons in table format.}

\item{options}{A list of named options to pass to \code{viper} such as
\code{minsize} or \code{method}. These options should not include,
\code{eset} or \code{regulon}.}

\item{tidy}{Logical, whether computed viper scores should be returned in a
tidy format.}
}
\value{
A matrix of normalized enrichment scores for each TF across all
 samples. Of note, if you provide a Seurat object as input the function will
 return also a Seurat object with a new assay called \code{dorothea} For all
 other inputs the function will return a matrix. If \code{tidy} is
 \code{TRUE} the normalized enrichment scores are retured in a tidy format
 (not supported for Seurat objects).
}
\description{
This function is a convenient wrapper for the
\code{\link[=viper]{viper::viper()}} function using DoRothEA regulons.
}
\examples{
# use example gene expression matrix from bcellViper package
library(bcellViper)
data(bcellViper, package = "bcellViper")
# acessing (human) dorothea regulons
# for mouse regulons: data(dorothea_mm, package = "dorothea")
data(dorothea_hs, package = "dorothea")
# run viper
tf_activities <- run_viper(dset, dorothea_hs,
                          options =  list(method = "scale", minsize = 4,
                          eset.filter = FALSE, cores = 1,
                          verbose = FALSE))
}
